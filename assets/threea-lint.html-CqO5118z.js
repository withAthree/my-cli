import{_ as o,r as l,o as i,c as r,a as e,b as t,d as a,e as s}from"./app-DAVKLUPX.js";const c={},d=e("h1",{id:"threea-lint",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#threea-lint"},[e("span",null,"threea-lint")])],-1),p=e("h2",{id:"背景",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#背景"},[e("span",null,"背景")])],-1),h=e("p",null,"引入了多个业界流行的 Linter，并根据规范内容定制了规则包：",-1),u=e("thead",null,[e("tr",null,[e("th",null,"规范"),e("th",null,"Lint 工具"),e("th",null,"npm 包")])],-1),m=e("td",null,[t("JavaScript 编码规范 "),e("br"),t(" TypeScript 编码规范 "),e("br"),t(" Node 编码规范")],-1),k={href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://www.npmjs.com/package/threea-eslint-config",target:"_blank",rel:"noopener noreferrer"},g=e("td",null,"CSS 编码规范",-1),b={href:"https://stylelint.io/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.npmjs.com/package/threea-stylelint-config",target:"_blank",rel:"noopener noreferrer"},v=e("td",null,"Git 规范",-1),y={href:"https://commitlint.js.org/#/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://www.npmjs.com/package/threea-commitlint-config",target:"_blank",rel:"noopener noreferrer"},j=e("td",null,"文档规范",-1),S={href:"https://github.com/DavidAnson/markdownlint",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.npmjs.com/package/threea-markdownlint-config",target:"_blank",rel:"noopener noreferrer"},L=s(`<p>可以看到这些 <code>Linter</code> 和规则包众多且零散，全部安装它们会给项目增加十几个依赖，接入和升级成本都比较高。</p><p><code>threea-lint</code> 收敛屏蔽了这些依赖和配置细节，提供简单的 CLI 和 Node.js API，让项目能够一键接入、一键扫描、一键修复、一键升级，并为项目配置 git commit 卡口，降低项目接入规范的成本。</p><h2 id="cli-使用" tabindex="-1"><a class="header-anchor" href="#cli-使用"><span>CLI 使用</span></a></h2><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h3><p>在终端执行：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> threea-lint <span class="token parameter variable">-g</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装完成后，可执行 <code>threea-lint -h</code> 以验证安装成功。</p><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h3><h4 id="threea-lint-init-一键接入" tabindex="-1"><a class="header-anchor" href="#threea-lint-init-一键接入"><span><code>threea-lint init</code>：一键接入</span></a></h4><p>在项目根目录执行 <code>threea-lint init</code>，即可一键接入规范，为项目安装规范 <code>Lint</code> 所需的依赖和配置。</p><p>具体会做以下事情：</p>`,11),E=e("code",null,"Linter",-1),P={href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://stylelint.io/",target:"_blank",rel:"noopener noreferrer"},T={href:"https://commitlint.js.org/#/",target:"_blank",rel:"noopener noreferrer"},I={href:"https://github.com/DavidAnson/markdownlint",target:"_blank",rel:"noopener noreferrer"},O={href:"https://www.npmjs.com/package/threea-eslint-config",target:"_blank",rel:"noopener noreferrer"},A={href:"https://www.npmjs.com/package/threea-stylelint-config",target:"_blank",rel:"noopener noreferrer"},C={href:"https://www.npmjs.com/package/threea-commitlint-config",target:"_blank",rel:"noopener noreferrer"},V={href:"https://www.npmjs.com/package/threea-markdownlint-config",target:"_blank",rel:"noopener noreferrer"},J=s("<li><code>.eslintrc.js</code>、<code>.eslintignore</code>：ESLint 配置（继承 <code>threea-eslint-config</code>）及黑名单文件</li><li><code>.stylelintrc.js</code>、<code>.stylelintignore</code>：stylelint 配置（继承 <code>threea-stylelint-config</code>）及黑名单文件</li><li><code>commitlint.config.js</code>：commitlint 配置（继承 <code>threea-commitlint-config</code>）</li><li><code>.markdownlint.json</code>、<code>.markdownlintignore</code>：<code>markdownlint</code> 配置及黑名单文件</li>",4),q=e("code",null,".prettierrc.js",-1),M={href:"https://prettier.io/docs/en/configuration.html",target:"_blank",rel:"noopener noreferrer"},B=e("code",null,".editorconfig",-1),D={href:"https://editorconfig.org/",target:"_blank",rel:"noopener noreferrer"},R=e("code",null,".vscode/extensions.json",-1),z={href:"https://code.visualstudio.com/docs/editor/extension-gallery#_workspace-recommended-extensions",target:"_blank",rel:"noopener noreferrer"},F=e("code",null,"ESLint",-1),G=e("code",null,"stylelint",-1),H=e("code",null,"markdownlint",-1),K=e("code",null,"prettier",-1),Q=e("code",null,".vscode/settings.json",-1),U={href:"https://code.visualstudio.com/docs/getstarted/settings#_settings-file-locations",target:"_blank",rel:"noopener noreferrer"},W=e("code",null,"ESLint",-1),X=e("code",null,"stylelint",-1),Y=e("code",null,"validate",-1),Z=e("strong",null,"保存时自动运行 fix",-1),$=e("code",null,"Prettier",-1),ee=e("code",null,"prettier-vscode",-1),te=e("strong",null,"保存时自动格式化",-1),ne=e("li",null,[e("code",null,"threea-lint.config.js"),t("threea-lint 包的一些配置，如启用的功能等")],-1),ae={href:"https://www.npmjs.com/package/husky",target:"_blank",rel:"noopener noreferrer"},se=e("code",null,"threea-lint commit-file-scan",-1),oe=e("code",null,"threea-lint commit-msg-scan",-1),le=e("code",null,"threea-lint commit-file-scan",-1),ie=e("code",null,"--strict",-1),re=s('<blockquote><p>注 1：如果项目已经配置过 ESLint、stylelint 等 Linter，执行 <code>threea-lint init</code> 将会提示存在冲突的依赖和配置，并在得到确认后进行覆盖：</p><p>注 2：如果项目的 .vscode/ 目录被 .gitignore 忽略，可以在拉取项目后单独执行 <code>threea-lint init --vscode</code> 命令写入 <code>.vscode/extensions.json</code> 和 <code>.vscode/settings.json</code> 配置文件</p></blockquote><h4 id="threea-lint-scan-一键扫描" tabindex="-1"><a class="header-anchor" href="#threea-lint-scan-一键扫描"><span><code>threea-lint scan</code>：一键扫描</span></a></h4><p>在项目的根目录执行命令，即可扫描项目的规范问题：</p><p>支持下列参数：</p><ul><li><code>-q</code> <code>--quiet</code> 仅报告 error 级别的问题</li><li><code>-o</code> <code>--output-report</code> 输出扫描出的规范问题日志</li><li><code>-i</code> <code>--include &lt;dirpath&gt;</code> 指定要进行规范扫描的目录</li><li><code>--no-ignore</code> 忽略 eslint 的 ignore 配置文件和 ignore 规则</li></ul><blockquote><p>注 1：事实上，你可以在任意目录执行 <code>threea-lint scan</code> <code>threea-lint</code> 会根据文件类型、JSON 等特征嗅探项目类型。但我们还是推荐在执行过 <code>threea-lint init</code> 的项目根目录执行 <code>threea-lint scan</code>，以得到最准确的扫描结果。</p><p>注 2: <code>threea-lint</code> 会根据项目内有无 eslint 和 stylelint 配置文件判断使用项目的配置文件还是 <code>threea-lint</code> 默认配置进行扫描。若使用项目的，在未安装依赖时会帮其安装（执行 npm i）。若使用项目配置扫描失败，则使用默认配置扫描</p></blockquote><h4 id="threea-lint-fix-一键修复" tabindex="-1"><a class="header-anchor" href="#threea-lint-fix-一键修复"><span><code>threea-lint fix</code>：一键修复</span></a></h4><p>在项目的根目录执行命令，即可修复部分规范问题：</p><p>支持下列参数：</p><ul><li><code>-i</code> <code>--include &lt;dirpath&gt;</code> 指定要进行修复扫描的目录</li><li><code>--no-ignore</code> 忽略 eslint 的 ignore 配置文件和 ignore 规则</li></ul><p>注意请 review 下修复前后的代码，以免工具误修的情况。</p><h4 id="threea-lint-commit-file-scan-提交文件扫描" tabindex="-1"><a class="header-anchor" href="#threea-lint-commit-file-scan-提交文件扫描"><span><code>threea-lint commit-file-scan</code> 提交文件扫描</span></a></h4><p>在 git commit 时对提交文件进行规范问题扫描，需配合 git 的 pre-commit 钩子使用。</p><p>支持下列参数：</p><ul><li><code>-s</code> <code>--strict</code> 严格模式，对 warn 和 error 问题都卡口，默认仅对 error 问题卡口</li></ul><h4 id="threea-lint-commit-msg-scan-提交信息扫描" tabindex="-1"><a class="header-anchor" href="#threea-lint-commit-msg-scan-提交信息扫描"><span><code>threea-lint commit-msg-scan</code> 提交信息扫描</span></a></h4>',16),ce={href:"https://www.npmjs.com/package/husky",target:"_blank",rel:"noopener noreferrer"},de=s(`<h2 id="node-js-api-使用" tabindex="-1"><a class="header-anchor" href="#node-js-api-使用"><span>Node.js API 使用</span></a></h2><h3 id="安装-1" tabindex="-1"><a class="header-anchor" href="#安装-1"><span>安装</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> threea-lint <span class="token parameter variable">--save</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="api" tabindex="-1"><a class="header-anchor" href="#api"><span>API</span></a></h3><h4 id="init-初始化" tabindex="-1"><a class="header-anchor" href="#init-初始化"><span>init：初始化</span></a></h4><ul><li>threea-lint.init(config)：将项目一键接入规范，效果等同于 <code>threea-lint init</code></li></ul><p>示例：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>  lint<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">eslintType</span><span class="token operator">:</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">enableESLint</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">enableStylelint</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">enableMarkdownlint</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">enablePrettier</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">disableNpmInstall</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>config 参数如下：</p><table><thead><tr><th>参数</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>cwd</td><td>string</td><td>-</td><td>项目绝对路径</td></tr><tr><td>eslintType</td><td>ESLintType</td><td>-</td><td>语言和框架类型，如果不配置，等同于 threea-lint init，控制台会出现选择器，如果配置，控制台就不会出现选择器</td></tr><tr><td>enableESLint</td><td>boolean</td><td>true</td><td>是否启用 ESLint，如果不配置默认值为 true，即默认启用 ESLint</td></tr><tr><td>enableStylelint</td><td>boolean</td><td>-</td><td>是否启用 stylelint，如果不配置，等同于 threea-lint init，控制台会出现选择器，如果配置，控制台就不会出现选择器</td></tr><tr><td>enableMarkdownlint</td><td>boolean</td><td>-</td><td>是否启用 markdownlint，如果不配置，等同于 threea-lint init，控制台会出现选择器，如果配置，控制台就不会出现选择器</td></tr><tr><td>enablePrettier</td><td>boolean</td><td>-</td><td>是否启用 Prettier</td></tr><tr><td>disableNpmInstall</td><td>boolean</td><td>false</td><td>是否禁用自动在初始化完成后安装依赖</td></tr></tbody></table><h5 id="eslinttype" tabindex="-1"><a class="header-anchor" href="#eslinttype"><span>ESLintType</span></a></h5><ul><li><code>default</code>: 纯 JavaScript 项目</li><li><code>react</code>: JavaScript + React 项目</li><li><code>vue</code>: JavaScript + Vue 项目</li><li><code>typescript/default</code>: 纯 TypeScript 项目</li><li><code>typescript/react</code>: TypeScript + React 项目</li><li><code>typescript/vue</code>: TypeScript + Vue 项目</li><li><code>es5</code>: ES5 及之前版本的 JavaScript</li></ul><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h2><p><code>threea-lint</code> 基于一份配置进行扫描（但你也可以零配置使用），支持的配置参数有：</p><table><thead><tr><th>参数</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>enableESLint</td><td>boolean</td><td>true</td><td>是否启用 ESLint</td></tr><tr><td>enableStylelint</td><td>boolean</td><td>true</td><td>是否启用 stylelint</td></tr><tr><td>enableMarkdownlint</td><td>boolean</td><td>true</td><td>是否启用 markdownlint</td></tr><tr><td>enablePrettier</td><td>boolean</td><td>-</td><td>是否启用 Prettier</td></tr><tr><td>eslintOptions</td><td>ESLint.Options</td><td>-</td><td>ESLint 配置项，若未设置将使用执行目录下或内置的默认 eslintrc 和 eslintignore 进行扫描</td></tr><tr><td>stylelintOptions</td><td>stylelint.LinterOptions</td><td>-</td><td>stylelint 配置项，若未设置将使用执行目录下或内置的默认 stylelintrc 和 stylelintignore 进行扫描</td></tr><tr><td>markdownlintOptions</td><td>markdownlint.Options</td><td>-</td><td>markdownlint 配置项，若未设置将使用执行目录下或内置的默认 markdownlint 配置文件进行扫描</td></tr></tbody></table><p><code>threea-lint</code> 会读取执行目录下的 <code>threea-lint.config.js</code> 作为配置文件。<code>threea-lint init</code> 会在执行目录下新增如下的 <code>threea-lint.config.js</code> 文件：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">enableESLint</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">enableStylelint</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">enableMarkdownlint</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">enablePrettier</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h2><h3 id="typescript-项目扫描性能问题" tabindex="-1"><a class="header-anchor" href="#typescript-项目扫描性能问题"><span>TypeScript 项目扫描性能问题</span></a></h3><p>如果你的 TS 项目 commit 卡口和 <code>threea-lint scan</code> 运行时间很长，可以通过如下在 <code>.eslintrc.js</code> 中增加以下配置提升性能：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">parserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">project</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// for lint performance</span>
    <span class="token literal-property property">createDefaultProgram</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// for lint performance</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;@typescript-eslint/dot-notation&#39;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// for lint performance</span>
    <span class="token string-property property">&#39;@typescript-eslint/restrict-plus-operands&#39;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// for lint performance</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21);function pe(he,ue){const n=l("ExternalLinkIcon");return i(),r("div",null,[d,p,h,e("table",null,[u,e("tbody",null,[e("tr",null,[m,e("td",null,[e("a",k,[t("ESLint"),a(n)])]),e("td",null,[e("a",_,[t("threea-eslint-config"),a(n)])])]),e("tr",null,[g,e("td",null,[e("a",b,[t("stylelint"),a(n)])]),e("td",null,[e("a",f,[t("threea-stylelint-config"),a(n)])])]),e("tr",null,[v,e("td",null,[e("a",y,[t("commitlint"),a(n)])]),e("td",null,[e("a",w,[t("threea-commitlint-config"),a(n)])])]),e("tr",null,[j,e("td",null,[e("a",S,[t("markdownlint"),a(n)])]),e("td",null,[e("a",x,[t("threea-markdownlint-config"),a(n)])])])])]),L,e("ul",null,[e("li",null,[t("安装各种依赖：包括 "),E,t(" 依赖，如 "),e("a",P,[t("ESLint"),a(n)]),t("、"),e("a",N,[t("stylelint"),a(n)]),t("、"),e("a",T,[t("commitlint"),a(n)]),t("、"),e("a",I,[t("markdownlint"),a(n)]),t(" 等；配置依赖，如 "),e("a",O,[t("threea-eslint-config"),a(n)]),t("、"),e("a",A,[t("threea-stylelint-config"),a(n)]),t("、"),e("a",C,[t("threea-commitlint-config"),a(n)]),t("、"),e("a",V,[t("threea-markdownlint-config"),a(n)]),t(" 等")]),e("li",null,[t("写入各种配置文件，包括： "),e("ul",null,[J,e("li",null,[q,t("：符合规范的 "),e("a",M,[t("Prettier 配置"),a(n)])]),e("li",null,[B,t("：符合规范的 "),e("a",D,[t("editorconfig"),a(n)])]),e("li",null,[R,t("：写入规范相关的 "),e("a",z,[t("VSCode 插件推荐"),a(n)]),t("，包括 "),F,t("、"),G,t("、"),H,t("、"),K,t(" 等")]),e("li",null,[Q,t("：写入规范相关的 "),e("a",U,[t("VSCode 设置"),a(n)]),t("，设置 "),W,t(" 和 "),X,t(" 插件的 "),Y,t(" 及"),Z,t("，如果选择使用 "),$,t("，会同时将 "),ee,t(" 插件设置为各前端语言的 defaultFormatter，并配置"),te]),ne])]),e("li",null,[t("配置 git commit 卡口：使用 "),e("a",ae,[t("husky"),a(n)]),t(" 设置代码提交卡口，在 git commit 时会运行 "),se,t(" 和 "),oe,t(" 分别对提交文件和提交信息进行规范检查。"),le,t(" 默认仅对 error 问题卡口，如果你想对 warn 问题也卡口，可以增加 "),ie,t(" 参数以开启严格模式")])]),re,e("p",null,[t("git commit 时对 commit message 的格式进行扫描（使用 commitlint），需配合 "),e("a",ce,[t("husky"),a(n)]),t(" 的 commit-msg 钩子使用。")]),de])}const ke=o(c,[["render",pe],["__file","threea-lint.html.vue"]]),_e=JSON.parse('{"path":"/cli/threea-lint.html","title":"threea-lint","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"CLI 使用","slug":"cli-使用","link":"#cli-使用","children":[{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"使用","slug":"使用","link":"#使用","children":[]}]},{"level":2,"title":"Node.js API 使用","slug":"node-js-api-使用","link":"#node-js-api-使用","children":[{"level":3,"title":"安装","slug":"安装-1","link":"#安装-1","children":[]},{"level":3,"title":"API","slug":"api","link":"#api","children":[]}]},{"level":2,"title":"配置","slug":"配置","link":"#配置","children":[]},{"level":2,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[{"level":3,"title":"TypeScript 项目扫描性能问题","slug":"typescript-项目扫描性能问题","link":"#typescript-项目扫描性能问题","children":[]}]}],"git":{"updatedTime":1712908965000,"contributors":[{"name":"withAthree","email":"huangkaixiang8462@163.com","commits":1}]},"filePathRelative":"cli/threea-lint.md"}');export{ke as comp,_e as data};
